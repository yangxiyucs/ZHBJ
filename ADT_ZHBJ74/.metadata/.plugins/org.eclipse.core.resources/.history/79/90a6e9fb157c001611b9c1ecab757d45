package zhbj.fragment;

import java.util.ArrayList;

import zhbj.MainActivity;
import zhbj.base.BasePager;
import zhbj.base.imple.*;
import zhbj.view.NoScrollViewPager;

import com.example.zhbj.R;
import com.jeremyfeinstein.slidingmenu.lib.SlidingMenu;

import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import android.widget.RadioGroup.OnCheckedChangeListener;

/**
 * 主fragment
 * 
 * @author Administrator
 * 
 */
public class ContentFragment extends BaseFragment {

	private NoScrollViewPager mViewPager;

	private ArrayList<BasePager> mPagers; // 5个标签页的集合
	private RadioGroup rgGroup;

	@Override
	public View initView() {
		View view = View.inflate(mactivity, R.layout.fragment_content, null);
		mViewPager = (NoScrollViewPager) view.findViewById(R.id.vp_content);
		rgGroup = (RadioGroup) view.findViewById(R.id.rg_group);

		return view;

	}

	@Override
	public void initData() {
		mPagers = new ArrayList<BasePager>();
		// 添加五个标签页
		mPagers.add(new HomePager(mactivity));
		mPagers.add(new NewsCenterPager(mactivity));
		mPagers.add(new SmartPager(mactivity));
		mPagers.add(new GovAffairsPager(mactivity));
		mPagers.add(new SettingPager(mactivity));

		mViewPager.setAdapter(new ContentAdapter());
		mViewPager.setOnPageChangeListener(new OnPageChangeListener() {

			@Override
			public void onPageSelected(int position) {
				BasePager pager = mPagers.get(position);
				pager.initData();
				if (position == 0 || position == mPagers.size() - 1) {
					// 首页和设置页 禁用侧边栏
					setSlidingMenuEnable(false);
				} else {
					// 开启侧边栏 　
					setSlidingMenuEnable(true);

				}
			}

			/**
			 * 开启或者禁用侧边栏
			 * 
			 * @param b
			 */
			private void setSlidingMenuEnable(boolean b) {
				// 获取侧边栏
				MainActivity mainUi = (MainActivity) mactivity;
				SlidingMenu slidingMenu = mainUi.getSlidingMenu();
				if (enable) {

				} else {

				}
			}

			@Override
			public void onPageScrolled(int position, float positionOffset,
					int positionOffsetPixels) {

			}

			@Override
			public void onPageScrollStateChanged(int state) {

			}

		});
		// 第一次就调用
		mPagers.get(0).initData();

		rgGroup.setOnCheckedChangeListener(new OnCheckedChangeListener() {

			@Override
			public void onCheckedChanged(RadioGroup group, int checkedId) {
				switch (checkedId) {
				case R.id.rb_home:
					mViewPager.setCurrentItem(0, false);// 参2表示是否有滑动动画
					break;
				case R.id.rb_news:
					mViewPager.setCurrentItem(1, false);
					break;
				case R.id.rb_smart:
					mViewPager.setCurrentItem(2, false);
					break;
				case R.id.rb_gov:
					mViewPager.setCurrentItem(3, false);
					break;
				case R.id.rb_setting:
					mViewPager.setCurrentItem(4, false);
					break;

				default:
					break;
				}
			}
		});

	}

	class ContentAdapter extends PagerAdapter {

		@Override
		public int getCount() {

			return mPagers.size();
		}

		@Override
		public boolean isViewFromObject(View view, Object object) {

			return view == object;
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {

			BasePager pager = mPagers.get(position);
			View view = pager.mRootView;// 获取当前页面布局

			// pager.initData();//初始化数据，viewpager会默认加载下一个页面
			// 为了节省流量和性能，不要在此处调用初始化数据的方法
			container.addView(view);
			return view;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {

			container.removeView((View) object);
		}
	}

}
